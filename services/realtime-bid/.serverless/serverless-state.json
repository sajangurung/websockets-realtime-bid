{
  "service": {
    "service": "websocket-service",
    "serviceObject": {
      "name": "websocket-service"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*?]+?)}",
      "name": "aws",
      "region": "us-east-1",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "OnconnectLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/onconnect"
            }
          },
          "OndisconnectLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ondisconnect"
            }
          },
          "SendmessageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sendmessage"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "prod",
                        "websocket-service",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/onconnect:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ondisconnect:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sendmessage:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/onconnect:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ondisconnect:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sendmessage:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "websocket-service",
                    "prod",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "OnconnectLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/websocket-service/prod/1576613811576-2019-12-17T20:16:51.576Z/websocket-service.zip"
              },
              "FunctionName": "onconnect",
              "Handler": "onconnect/app.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6
            },
            "DependsOn": [
              "OnconnectLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "OnconnectLambdaVersionpSFgWT4dKUtutCCK4S1cliC5LBFWjLtEkM2X0vwtVU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "OnconnectLambdaFunction"
              },
              "CodeSha256": "qm/uQU+6L5H0F+WiLvguk2EKg/U31X6daGUwbRWRR7M="
            }
          },
          "OndisconnectLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/websocket-service/prod/1576613811576-2019-12-17T20:16:51.576Z/websocket-service.zip"
              },
              "FunctionName": "ondisconnect",
              "Handler": "ondisconnect/app.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6
            },
            "DependsOn": [
              "OndisconnectLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "OndisconnectLambdaVersionVUtpeiQYqACawg0dRmskf2GtzdaizKDn7XhXxFmnRw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "OndisconnectLambdaFunction"
              },
              "CodeSha256": "qm/uQU+6L5H0F+WiLvguk2EKg/U31X6daGUwbRWRR7M="
            }
          },
          "SendmessageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/websocket-service/prod/1576613811576-2019-12-17T20:16:51.576Z/websocket-service.zip"
              },
              "FunctionName": "sendmessage",
              "Handler": "sendmessage/app.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6
            },
            "DependsOn": [
              "SendmessageLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SendmessageLambdaVersionYixH49H3OcM3s3Bf2aJQ3UbZQXDu3zJq2sHlormtsI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SendmessageLambdaFunction"
              },
              "CodeSha256": "qm/uQU+6L5H0F+WiLvguk2EKg/U31X6daGUwbRWRR7M="
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "OnconnectLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "OnconnectLambdaVersionpSFgWT4dKUtutCCK4S1cliC5LBFWjLtEkM2X0vwtVU"
            }
          },
          "OndisconnectLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "OndisconnectLambdaVersionVUtpeiQYqACawg0dRmskf2GtzdaizKDn7XhXxFmnRw"
            }
          },
          "SendmessageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SendmessageLambdaVersionYixH49H3OcM3s3Bf2aJQ3UbZQXDu3zJq2sHlormtsI"
            }
          },
          "NewServiceExport": {
            "Value": "A Value To Export",
            "Export": {
              "Name": "websocket-service-export"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "newService": "${self:}",
      "exportName": "websocket-service-export"
    },
    "pluginsData": {},
    "functions": {
      "onconnect": {
        "name": "onconnect",
        "handler": "onconnect/app.handler",
        "events": [],
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {}
      },
      "ondisconnect": {
        "name": "ondisconnect",
        "handler": "ondisconnect/app.handler",
        "events": [],
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {}
      },
      "sendmessage": {
        "name": "sendmessage",
        "handler": "sendmessage/app.handler",
        "events": [],
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {}
      }
    },
    "resources": {
      "Outputs": {
        "NewServiceExport": {
          "Value": "A Value To Export",
          "Export": {
            "Name": "websocket-service-export"
          }
        }
      },
      "Resources": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "artifact": "/Users/sajangurung/projects/websockets-realtime-bid/.serverless/websocket-service.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/websocket-service/prod/1576613811576-2019-12-17T20:16:51.576Z",
    "artifact": "websocket-service.zip"
  }
}